/*!
 * statuses
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2016 Douglas Christopher Wilson
 * Copyright(c) 2024 Evgenii Troinov
 * MIT Licensed
 */
/**
 * Get the status code.
 *
 * Given a number, this will throw if it is not a known status
 * code, otherwise the code will be returned. Given a string,
 * the string will be parsed for a number and return the code
 * if valid, otherwise will lookup the code assuming this is
 * the status message.
 *
 * @param {string|number} code
 * @returns {number}
 * @public
 */
declare function status(code: string | number): string | number;
declare namespace status {
    var message: {
        100: string;
        101: string;
        102: string;
        103: string;
        200: string;
        201: string;
        202: string;
        203: string;
        204: string;
        205: string;
        206: string;
        207: string;
        208: string;
        226: string;
        300: string;
        301: string;
        302: string;
        303: string;
        304: string;
        305: string;
        307: string;
        308: string;
        400: string;
        401: string;
        402: string;
        403: string;
        404: string;
        405: string;
        406: string;
        407: string;
        408: string;
        409: string;
        410: string;
        411: string;
        412: string;
        413: string;
        414: string;
        415: string;
        416: string;
        417: string;
        418: string;
        421: string;
        422: string;
        423: string;
        424: string;
        425: string;
        426: string;
        428: string;
        429: string;
        431: string;
        451: string;
        500: string;
        501: string;
        502: string;
        503: string;
        504: string;
        505: string;
        506: string;
        507: string;
        508: string;
        509: string;
        510: string;
        511: string;
    };
    var code: {
        [key: string]: number;
    };
    var codes: number[];
    var redirect: {
        300: boolean;
        301: boolean;
        302: boolean;
        303: boolean;
        305: boolean;
        307: boolean;
        308: boolean;
    };
    var empty: {
        204: boolean;
        205: boolean;
        304: boolean;
    };
    var retry: {
        502: boolean;
        503: boolean;
        504: boolean;
    };
}

export { status as default };
