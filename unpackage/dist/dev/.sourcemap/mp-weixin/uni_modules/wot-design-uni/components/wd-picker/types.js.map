{"version":3,"file":"types.js","sources":["uni_modules/wot-design-uni/components/wd-picker/types.ts"],"sourcesContent":["import type { ComponentPublicInstance, ExtractPropTypes, PropType } from 'vue'\nimport { baseProps, makeArrayProp, makeBooleanProp, makeNumberProp, makeStringProp } from '../common/props'\nimport type { ColumnItem, PickerViewColumnChange } from '../wd-picker-view/types'\nimport type { FormItemRule } from '../wd-form/types'\n\nexport const pickerProps = {\n  ...baseProps,\n  /**\n   * label 外部自定义样式\n   */\n  customLabelClass: makeStringProp(''),\n  /**\n   * value 外部自定义样式\n   */\n  customValueClass: makeStringProp(''),\n  /**\n   * pickerView 外部自定义样式\n   */\n  customViewClass: makeStringProp(''),\n  /**\n   * 选择器左侧文案\n   */\n  label: String,\n  /**\n   * 选择器占位符\n   */\n  placeholder: String,\n  /**\n   * 是否禁用\n   */\n  disabled: makeBooleanProp(false),\n  /**\n   * 是否只读\n   */\n  readonly: makeBooleanProp(false),\n  /**\n   * 加载中\n   */\n  loading: makeBooleanProp(false),\n  /**\n   * 加载中颜色\n   */\n  loadingColor: makeStringProp('#4D80F0'),\n  /* popup */\n  /**\n   * 弹出层标题\n   */\n  title: String,\n  /**\n   * 取消按钮文案\n   */\n  cancelButtonText: String,\n  /**\n   * 确认按钮文案\n   */\n  confirmButtonText: String,\n  /**\n   * 是否必填\n   */\n  required: makeBooleanProp(false),\n  /**\n   * 尺寸\n   */\n  size: String,\n  /**\n   * 标签宽度\n   */\n  labelWidth: String,\n  /**\n   * 使用默认插槽\n   */\n  useDefaultSlot: makeBooleanProp(false),\n  /**\n   * 使用标签插槽\n   */\n  useLabelSlot: makeBooleanProp(false),\n  /**\n   * 错误状态\n   */\n  error: makeBooleanProp(false),\n  /**\n   * 右对齐\n   */\n  alignRight: makeBooleanProp(false),\n  /**\n   * 确定前校验函数，接收 (value, resolve, picker) 参数，通过 resolve 继续执行 picker，resolve 接收1个boolean参数\n   */\n  beforeConfirm: Function as PropType<PickerBeforeConfirm>,\n  /**\n   * 点击蒙层关闭\n   */\n  closeOnClickModal: makeBooleanProp(true),\n  /**\n   * 底部安全区域内\n   */\n  safeAreaInsetBottom: makeBooleanProp(true),\n  /**\n   * 文本溢出显示省略号\n   */\n  ellipsis: makeBooleanProp(false),\n  /**\n   * 选项总高度\n   */\n  columnsHeight: makeNumberProp(217),\n  /**\n   * 选项值对应的键名\n   */\n  valueKey: makeStringProp('value'),\n  /**\n   * 选项文本对应的键名\n   */\n  labelKey: makeStringProp('label'),\n  /**\n   * 选中项，如果为多列选择器，则其类型应为数组\n   */\n  modelValue: {\n    type: [String, Number, Array] as PropType<string | number | Array<string> | Array<number>>,\n    default: ''\n  },\n  /**\n   * 选择器数据，可以为字符串数组，也可以为对象数组，如果为二维数组，则为多列选择器\n   */\n  columns: {\n    type: Array as PropType<Array<string | number | ColumnItem | Array<string | number | ColumnItem>>>,\n    default: () => []\n  },\n  /**\n   * 接收 pickerView 实例、选中项、当前修改列的下标、resolve 作为入参，根据选中项和列下标进行判断，通过 pickerView 实例暴露出来的 setColumnData 方法修改其他列的数据源。\n   */\n  columnChange: Function as PropType<PickerViewColumnChange>,\n  /**\n   * 自定义展示文案的格式化函数，返回一个字符串\n   */\n  displayFormat: Function as PropType<PickerDisplayFormat>,\n  /**\n   * 自定义层级\n   */\n  zIndex: makeNumberProp(15),\n  /**\n   * 表单域 model 字段名，在使用表单校验功能的情况下，该属性是必填的\n   */\n  prop: String,\n  /**\n   * 表单验证规则，结合wd-form组件使用\n   */\n  rules: makeArrayProp<FormItemRule>(),\n  /**\n   * 是否在手指松开时立即触发 change 事件。若不开启则会在滚动动画结束后触发 change 事件，1.2.25版本起提供，仅微信小程序和支付宝小程序支持。\n   */\n  immediateChange: makeBooleanProp(false),\n  /**\n   * 显示清空按钮\n   */\n  clearable: makeBooleanProp(false)\n}\n\nexport type PickerProps = ExtractPropTypes<typeof pickerProps>\n\nexport type PickerDisplayFormat = (item: ColumnItem | ColumnItem[], vl: { valueKey: string; labelKey: string }) => string\n\nexport type PickerBeforeConfirm = (\n  value: string | number | boolean | string[] | number[] | boolean[],\n  resolve: (isPass: boolean) => void,\n  picker: any\n) => void\n\nexport type PickerExpose = {\n  // 打开picker弹框\n  open: () => void\n  // 关闭picker弹框\n  close: () => void\n  /**\n   * 设置加载状态\n   * @param loading 加载状态\n   */\n  setLoading: (loading: boolean) => void\n}\n\nexport type PickerInstance = ComponentPublicInstance<PickerExpose, PickerProps>\n"],"names":["baseProps","makeStringProp","makeBooleanProp","makeNumberProp","makeArrayProp"],"mappings":";;AAKO,MAAM,cAAc;AAAA,EACzB,GAAGA,iDAAA;AAAA;AAAA;AAAA;AAAA,EAIH,kBAAkBC,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA,EAInC,kBAAkBA,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA,EAInC,iBAAiBA,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA,EAIlC,OAAO;AAAA;AAAA;AAAA;AAAA,EAIP,aAAa;AAAA;AAAA;AAAA;AAAA,EAIb,UAAUC,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAI/B,UAAUA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAI/B,SAASA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAI9B,cAAcD,gEAAe,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtC,OAAO;AAAA;AAAA;AAAA;AAAA,EAIP,kBAAkB;AAAA;AAAA;AAAA;AAAA,EAIlB,mBAAmB;AAAA;AAAA;AAAA;AAAA,EAInB,UAAUC,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAI/B,MAAM;AAAA;AAAA;AAAA;AAAA,EAIN,YAAY;AAAA;AAAA;AAAA;AAAA,EAIZ,gBAAgBA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAIrC,cAAcA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAInC,OAAOA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAI5B,YAAYA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAIjC,eAAe;AAAA;AAAA;AAAA;AAAA,EAIf,mBAAmBA,iEAAgB,IAAI;AAAA;AAAA;AAAA;AAAA,EAIvC,qBAAqBA,iEAAgB,IAAI;AAAA;AAAA;AAAA;AAAA,EAIzC,UAAUA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAI/B,eAAeC,gEAAe,GAAG;AAAA;AAAA;AAAA;AAAA,EAIjC,UAAUF,gEAAe,OAAO;AAAA;AAAA;AAAA;AAAA,EAIhC,UAAUA,gEAAe,OAAO;AAAA;AAAA;AAAA;AAAA,EAIhC,YAAY;AAAA,IACV,MAAM,CAAC,QAAQ,QAAQ,KAAK;AAAA,IAC5B,SAAS;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS;AAAA,IACP,MAAM;AAAA,IACN,SAAS,MAAM,CAAC;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc;AAAA;AAAA;AAAA;AAAA,EAId,eAAe;AAAA;AAAA;AAAA;AAAA,EAIf,QAAQE,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA,EAIzB,MAAM;AAAA;AAAA;AAAA;AAAA,EAIN,OAAOC,iDAAAA,cAA4B;AAAA;AAAA;AAAA;AAAA,EAInC,iBAAiBF,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAItC,WAAWA,iEAAgB,KAAK;AAClC;;"}