{"version":3,"file":"types.js","sources":["uni_modules/wot-design-uni/components/wd-datetime-picker-view/types.ts"],"sourcesContent":["import type { ComponentPublicInstance, ExtractPropTypes, PropType } from 'vue'\nimport { baseProps, makeBooleanProp, makeNumberProp, makeRequiredProp, makeStringProp } from '../common/props'\n\nexport type DateTimeType = 'date' | 'year-month' | 'time' | 'datetime' | 'year'\n\n/**\n * @description 根据传入的值和类型，获取当前的选项数组，便于传入 pickerView\n * @param value\n * @param type picker类型\n * @return {Array} pickerValue\n */\nexport function getPickerValue(value: string | number, type: DateTimeType) {\n  const values: number[] = []\n  const date = new Date(value)\n  if (type === 'time') {\n    const pair = String(value).split(':')\n    values.push(parseInt(pair[0]), parseInt(pair[1]))\n  } else {\n    values.push(date.getFullYear(), date.getMonth() + 1)\n    if (type === 'date') {\n      values.push(date.getDate())\n    } else if (type === 'datetime') {\n      values.push(date.getDate(), date.getHours(), date.getMinutes())\n    }\n  }\n  return values\n}\n\nexport const datetimePickerViewProps = {\n  ...baseProps,\n  /**\n   * 选中项，当 type 为 time 时，类型为字符串，否则为 时间戳\n   */\n  modelValue: makeRequiredProp([String, Number]),\n  /**\n   * 加载中\n   */\n  loading: makeBooleanProp(false),\n  /**\n   * 加载的颜色，只能使用十六进制的色值写法，且不能使用缩写\n   */\n  loadingColor: makeStringProp('#4D80F0'),\n  /**\n   * picker内部滚筒高\n   */\n  columnsHeight: makeNumberProp(217),\n  valueKey: makeStringProp('value'),\n  labelKey: makeStringProp('label'),\n  /**\n   * 选择器类型，可选值：date / year-month / time\n   */\n  type: makeStringProp<DateTimeType>('datetime'),\n  /**\n   * 自定义过滤选项的函数，返回列的选项数组\n   */\n  filter: Function as PropType<DatetimePickerViewFilter>,\n  /**\n   * 自定义弹出层选项文案的格式化函数，返回一个字符串\n   */\n  formatter: Function as PropType<DatetimePickerViewFormatter>,\n  /**\n   * 自定义列的格式化函数\n   */\n  columnFormatter: Function as PropType<DatetimePickerViewColumnFormatter>,\n  /**\n   * 最小日期\n   */\n  minDate: makeNumberProp(new Date(new Date().getFullYear() - 10, 0, 1).getTime()),\n  /**\n   * 最大日期\n   */\n  maxDate: makeNumberProp(new Date(new Date().getFullYear() + 10, 11, 31).getTime()),\n  /**\n   * 最小小时，time类型时生效\n   */\n  minHour: makeNumberProp(0),\n  /**\n   * 最大小时，time类型时生效\n   */\n  maxHour: makeNumberProp(23),\n  /**\n   * 最小分钟，time类型时生效\n   */\n  minMinute: makeNumberProp(0),\n  /**\n   * 最大分钟，time类型时生效\n   */\n  maxMinute: makeNumberProp(59),\n  /**\n   * 是否在手指松开时立即触发picker-view的 change 事件。若不开启则会在滚动动画结束后触发 change 事件，1.2.25版本起提供，仅微信小程序和支付宝小程序支持。\n   */\n  immediateChange: makeBooleanProp(false),\n  startSymbol: makeBooleanProp(false)\n}\n\nexport type DatetimePickerViewColumnType = 'year' | 'month' | 'date' | 'hour' | 'minute'\n\nexport type DatetimePickerViewOption = {\n  label: string\n  value: number\n}\n\nexport type DatetimePickerViewFilter = (type: DatetimePickerViewColumnType, values: number[]) => number[]\n\nexport type DatetimePickerViewFormatter = (type: string, value: string) => string\n\nexport type DatetimePickerViewColumnFormatter = (picker: DatetimePickerViewInstance) => DatetimePickerViewOption[][]\n\nexport type DatetimePickerViewProps = ExtractPropTypes<typeof datetimePickerViewProps>\n\nexport type DatetimePickerViewExpose = {\n  updateColumns: () => DatetimePickerViewOption[][]\n  setColumns: (columnList: DatetimePickerViewOption[][]) => void\n  getSelects: () => Record<string, any> | Record<string, any>[] | undefined\n  correctValue: (value: string | number) => string | number\n  getPickerValue: (value: string | number, type: DateTimeType) => number[]\n  getOriginColumns: () => {\n    type: DatetimePickerViewColumnType\n    values: number[]\n  }[]\n}\n\nexport type DatetimePickerViewInstance = ComponentPublicInstance<DatetimePickerViewProps, DatetimePickerViewExpose>\n"],"names":["baseProps","makeRequiredProp","makeBooleanProp","makeStringProp","makeNumberProp"],"mappings":";;AAWgB,SAAA,eAAe,OAAwB,MAAoB;AACzE,QAAM,SAAmB,CAAA;AACnB,QAAA,OAAO,IAAI,KAAK,KAAK;AAC3B,MAAI,SAAS,QAAQ;AACnB,UAAM,OAAO,OAAO,KAAK,EAAE,MAAM,GAAG;AAC7B,WAAA,KAAK,SAAS,KAAK,CAAC,CAAC,GAAG,SAAS,KAAK,CAAC,CAAC,CAAC;AAAA,EAAA,OAC3C;AACL,WAAO,KAAK,KAAK,YAAA,GAAe,KAAK,SAAA,IAAa,CAAC;AACnD,QAAI,SAAS,QAAQ;AACZ,aAAA,KAAK,KAAK,QAAS,CAAA;AAAA,IAAA,WACjB,SAAS,YAAY;AACvB,aAAA,KAAK,KAAK,QAAQ,GAAG,KAAK,YAAY,KAAK,WAAA,CAAY;AAAA,IAChE;AAAA,EACF;AACO,SAAA;AACT;AAEO,MAAM,0BAA0B;AAAA,EACrC,GAAGA,iDAAA;AAAA;AAAA;AAAA;AAAA,EAIH,YAAYC,iDAAA,iBAAiB,CAAC,QAAQ,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA,EAI7C,SAASC,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAI9B,cAAcC,gEAAe,SAAS;AAAA;AAAA;AAAA;AAAA,EAItC,eAAeC,gEAAe,GAAG;AAAA,EACjC,UAAUD,gEAAe,OAAO;AAAA,EAChC,UAAUA,gEAAe,OAAO;AAAA;AAAA;AAAA;AAAA,EAIhC,MAAMA,gEAA6B,UAAU;AAAA;AAAA;AAAA;AAAA,EAI7C,QAAQ;AAAA;AAAA;AAAA;AAAA,EAIR,WAAW;AAAA;AAAA;AAAA;AAAA,EAIX,iBAAiB;AAAA;AAAA;AAAA;AAAA,EAIjB,SAASC,iDAAAA,eAAe,IAAI,0BAAS,KAAK,GAAE,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAI/E,SAASA,iDAAAA,eAAe,IAAI,0BAAS,KAAK,GAAE,YAAY,IAAI,IAAI,IAAI,EAAE,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAIjF,SAASA,gEAAe,CAAC;AAAA;AAAA;AAAA;AAAA,EAIzB,SAASA,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA,EAI1B,WAAWA,gEAAe,CAAC;AAAA;AAAA;AAAA;AAAA,EAI3B,WAAWA,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA,EAI5B,iBAAiBF,iEAAgB,KAAK;AAAA,EACtC,aAAaA,iEAAgB,KAAK;AACpC;;;"}