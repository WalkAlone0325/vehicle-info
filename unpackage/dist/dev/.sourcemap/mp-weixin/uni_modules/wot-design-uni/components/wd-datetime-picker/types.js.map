{"version":3,"file":"types.js","sources":["uni_modules/wot-design-uni/components/wd-datetime-picker/types.ts"],"sourcesContent":["import type { ComponentPublicInstance, ExtractPropTypes, PropType } from 'vue'\nimport { baseProps, makeArrayProp, makeBooleanProp, makeNumberProp, makeRequiredProp, makeStringProp } from '../common/props'\nimport type { DateTimeType, DatetimePickerViewFilter, DatetimePickerViewFormatter } from '../wd-datetime-picker-view/types'\nimport type { FormItemRule } from '../wd-form/types'\n\nexport const datetimePickerProps = {\n  ...baseProps,\n  /**\n   * 选择器左侧文案，label可以不传\n   */\n  label: String,\n  /**\n   * 选择器占位符\n   */\n  placeholder: String,\n  /**\n   * 禁用\n   */\n  disabled: makeBooleanProp(false),\n  /**\n   * 只读\n   */\n  readonly: makeBooleanProp(false),\n  /**\n   * 加载中\n   */\n  loading: makeBooleanProp(false),\n  /**\n   * 加载的颜色，只能使用十六进制的色值写法，且不能使用缩写\n   */\n  loadingColor: makeStringProp('#4D80F0'),\n  /**\n   * 弹出层标题\n   */\n  title: String,\n  /**\n   * 取消按钮文案\n   */\n  cancelButtonText: String,\n  /**\n   * 确认按钮文案\n   */\n  confirmButtonText: String,\n  /**\n   * 是否必填\n   */\n  required: makeBooleanProp(false),\n  /**\n   * 设置选择器大小，可选值：large\n   */\n  size: String,\n  /**\n   * 设置左侧标题宽度\n   */\n  labelWidth: makeStringProp('33%'),\n  /**\n   * 使用默认插槽\n   */\n  useDefaultSlot: makeBooleanProp(false),\n  /**\n   * label 使用插槽\n   */\n  useLabelSlot: makeBooleanProp(false),\n  /**\n   * 是否为错误状态，错误状态时右侧内容为红色\n   */\n  error: makeBooleanProp(false),\n  /**\n   * 选择器的值靠右展示\n   */\n  alignRight: makeBooleanProp(false),\n  /**\n   * 点击遮罩是否关闭\n   */\n  closeOnClickModal: makeBooleanProp(true),\n  /**\n   * 弹出面板是否设置底部安全距离（iphone X 类型的机型）\n   */\n  safeAreaInsetBottom: makeBooleanProp(true),\n  /**\n   * 是否超出隐藏\n   */\n  ellipsis: makeBooleanProp(false),\n  /**\n   * picker内部滚筒高\n   */\n  columnsHeight: makeNumberProp(217),\n  valueKey: makeStringProp('value'),\n  labelKey: makeStringProp('label'),\n  /**\n   * 选中项，当 type 为 time 时，类型为字符串；当 type 为 Array 时，类型为范围选择；否则为 时间戳\n   */\n  modelValue: makeRequiredProp([String, Number, Array] as PropType<string | number | Array<string | number>>),\n  /**\n   * 选择器类型，可选值为：date / year-month / time\n   */\n  type: makeStringProp<DateTimeType>('datetime'),\n  /**\n   * 最小日期\n   */\n  minDate: makeNumberProp(new Date(new Date().getFullYear() - 10, 0, 1).getTime()),\n  /**\n   * 最大日期\n   */\n  maxDate: makeNumberProp(new Date(new Date().getFullYear() + 10, 11, 31, 23, 59, 59).getTime()),\n  /**\n   * 最小小时，time类型时生效\n   */\n  minHour: makeNumberProp(0),\n  /**\n   * 最大小时，time类型时生效\n   */\n  maxHour: makeNumberProp(23),\n  /**\n   * 最小分钟，time类型时生效\n   */\n  minMinute: makeNumberProp(0),\n  /**\n   * 最大分钟，time类型时生效\n   */\n  maxMinute: makeNumberProp(59),\n  /**\n   * 自定义过滤选项的函数，返回列的选项数组\n   */\n  filter: Function as PropType<DatetimePickerViewFilter>,\n  /**\n   * 自定义弹出层选项文案的格式化函数，返回一个字符串\n   */\n  formatter: Function as PropType<DatetimePickerViewFormatter>,\n  /**\n   * 自定义展示文案的格式化函数，返回一个字符串\n   */\n  displayFormat: Function as PropType<DatetimePickerDisplayFormat>,\n  /**\n   * 确定前校验函数，接收 (value, resolve, picker) 参数，通过 resolve 继续执行 picker，resolve 接收1个boolean参数\n   */\n  beforeConfirm: Function as PropType<DatetimePickerBeforeConfirm>,\n  /**\n   * 在区域选择模式下，自定义展示tab标签文案的格式化函数，返回一个字符串\n   */\n  displayFormatTabLabel: Function as PropType<DatetimePickerDisplayFormatTabLabel>,\n  /**\n   * 默认日期，类型保持与 value 一致，打开面板时面板自动选到默认日期\n   */\n  defaultValue: [String, Number, Array] as PropType<string | number | Array<string | number>>,\n  /**\n   * 弹窗层级\n   */\n  zIndex: makeNumberProp(15),\n  /**\n   * 表单域 model 字段名，在使用表单校验功能的情况下，该属性是必填的\n   */\n  prop: String,\n  /**\n   * 表单验证规则，结合wd-form组件使用\n   */\n  rules: makeArrayProp<FormItemRule>(),\n  /**\n   * picker cell 外部自定义样式\n   */\n  customCellClass: makeStringProp(''),\n  /**\n   * pickerView 外部自定义样式\n   */\n  customViewClass: makeStringProp(''),\n  /**\n   * label 外部自定义样式\n   */\n  customLabelClass: makeStringProp(''),\n  /**\n   * value 外部自定义样式\n   */\n  customValueClass: makeStringProp(''),\n  /**\n   * 是否在手指松开时立即触发picker-view的 change 事件。若不开启则会在滚动动画结束后触发 change 事件，1.2.25版本起提供，仅微信小程序和支付宝小程序支持。\n   */\n  immediateChange: makeBooleanProp(false)\n}\n\nexport type DatetimePickerDisplayFormat = (items: Record<string, any>[]) => string\n\nexport type DatetimePickerBeforeConfirm = (\n  value: number | string | (number | string)[],\n  resolve: (isPass: boolean) => void,\n  picker: DatetimePickerInstance\n) => void\n\nexport type DatetimePickerDisplayFormatTabLabel = (items: Record<string, any>[]) => string\n\nexport type DatetimePickerExpose = {\n  /**\n   * 打开picker弹框\n   */\n  open: () => void\n  /**\n   * 关闭picker弹框\n   */\n  close: () => void\n  /**\n   * 设置加载状态\n   * @param loading 加载状态\n   * @returns\n   */\n  setLoading: (loading: boolean) => void\n}\n\nexport type DatetimePickerProps = ExtractPropTypes<typeof datetimePickerProps>\n\nexport type DatetimePickerInstance = ComponentPublicInstance<DatetimePickerProps, DatetimePickerExpose>\n"],"names":["baseProps","makeBooleanProp","makeStringProp","makeNumberProp","makeRequiredProp","makeArrayProp"],"mappings":";;AAKO,MAAM,sBAAsB;AAAA,EACjC,GAAGA,iDAAA;AAAA;AAAA;AAAA;AAAA,EAIH,OAAO;AAAA;AAAA;AAAA;AAAA,EAIP,aAAa;AAAA;AAAA;AAAA;AAAA,EAIb,UAAUC,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAI/B,UAAUA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAI/B,SAASA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAI9B,cAAcC,gEAAe,SAAS;AAAA;AAAA;AAAA;AAAA,EAItC,OAAO;AAAA;AAAA;AAAA;AAAA,EAIP,kBAAkB;AAAA;AAAA;AAAA;AAAA,EAIlB,mBAAmB;AAAA;AAAA;AAAA;AAAA,EAInB,UAAUD,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAI/B,MAAM;AAAA;AAAA;AAAA;AAAA,EAIN,YAAYC,gEAAe,KAAK;AAAA;AAAA;AAAA;AAAA,EAIhC,gBAAgBD,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAIrC,cAAcA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAInC,OAAOA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAI5B,YAAYA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAIjC,mBAAmBA,iEAAgB,IAAI;AAAA;AAAA;AAAA;AAAA,EAIvC,qBAAqBA,iEAAgB,IAAI;AAAA;AAAA;AAAA;AAAA,EAIzC,UAAUA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA,EAI/B,eAAeE,gEAAe,GAAG;AAAA,EACjC,UAAUD,gEAAe,OAAO;AAAA,EAChC,UAAUA,gEAAe,OAAO;AAAA;AAAA;AAAA;AAAA,EAIhC,YAAYE,iDAAAA,iBAAiB,CAAC,QAAQ,QAAQ,KAAK,CAAuD;AAAA;AAAA;AAAA;AAAA,EAI1G,MAAMF,gEAA6B,UAAU;AAAA;AAAA;AAAA;AAAA,EAI7C,SAASC,iDAAAA,eAAe,IAAI,0BAAS,KAAK,GAAE,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAI/E,SAASA,iDAAe,eAAA,IAAI,MAAK,oBAAI,KAAO,GAAA,YAAgB,IAAA,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAI7F,SAASA,gEAAe,CAAC;AAAA;AAAA;AAAA;AAAA,EAIzB,SAASA,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA,EAI1B,WAAWA,gEAAe,CAAC;AAAA;AAAA;AAAA;AAAA,EAI3B,WAAWA,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA,EAI5B,QAAQ;AAAA;AAAA;AAAA;AAAA,EAIR,WAAW;AAAA;AAAA;AAAA;AAAA,EAIX,eAAe;AAAA;AAAA;AAAA;AAAA,EAIf,eAAe;AAAA;AAAA;AAAA;AAAA,EAIf,uBAAuB;AAAA;AAAA;AAAA;AAAA,EAIvB,cAAc,CAAC,QAAQ,QAAQ,KAAK;AAAA;AAAA;AAAA;AAAA,EAIpC,QAAQA,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA,EAIzB,MAAM;AAAA;AAAA;AAAA;AAAA,EAIN,OAAOE,iDAAAA,cAA4B;AAAA;AAAA;AAAA;AAAA,EAInC,iBAAiBH,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA,EAIlC,iBAAiBA,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA,EAIlC,kBAAkBA,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA,EAInC,kBAAkBA,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA,EAInC,iBAAiBD,iEAAgB,KAAK;AACxC;;"}