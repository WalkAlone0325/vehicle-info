{"version":3,"file":"base64.js","sources":["uni_modules/jsencrypt/lib/lib/jsbn/base64.js"],"sourcesContent":["import { int2char } from \"./util\";\nvar b64map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar b64pad = \"=\";\nexport function hex2b64(h) {\n    var i;\n    var c;\n    var ret = \"\";\n    for (i = 0; i + 3 <= h.length; i += 3) {\n        c = parseInt(h.substring(i, i + 3), 16);\n        ret += b64map.charAt(c >> 6) + b64map.charAt(c & 63);\n    }\n    if (i + 1 == h.length) {\n        c = parseInt(h.substring(i, i + 1), 16);\n        ret += b64map.charAt(c << 2);\n    }\n    else if (i + 2 == h.length) {\n        c = parseInt(h.substring(i, i + 2), 16);\n        ret += b64map.charAt(c >> 2) + b64map.charAt((c & 3) << 4);\n    }\n    while ((ret.length & 3) > 0) {\n        ret += b64pad;\n    }\n    return ret;\n}\n// convert a base64 string to hex\nexport function b64tohex(s) {\n    var ret = \"\";\n    var i;\n    var k = 0; // b64 state, 0-3\n    var slop = 0;\n    for (i = 0; i < s.length; ++i) {\n        if (s.charAt(i) == b64pad) {\n            break;\n        }\n        var v = b64map.indexOf(s.charAt(i));\n        if (v < 0) {\n            continue;\n        }\n        if (k == 0) {\n            ret += int2char(v >> 2);\n            slop = v & 3;\n            k = 1;\n        }\n        else if (k == 1) {\n            ret += int2char((slop << 2) | (v >> 4));\n            slop = v & 0xf;\n            k = 2;\n        }\n        else if (k == 2) {\n            ret += int2char(slop);\n            ret += int2char(v >> 2);\n            slop = v & 3;\n            k = 3;\n        }\n        else {\n            ret += int2char((slop << 2) | (v >> 4));\n            ret += int2char(v & 0xf);\n            k = 0;\n        }\n    }\n    if (k == 1) {\n        ret += int2char(slop << 2);\n    }\n    return ret;\n}\n// convert a base64 string to a byte/number array\nexport function b64toBA(s) {\n    // piggyback on b64tohex for now, optimize later\n    var h = b64tohex(s);\n    var i;\n    var a = [];\n    for (i = 0; 2 * i < h.length; ++i) {\n        a[i] = parseInt(h.substring(2 * i, 2 * i + 2), 16);\n    }\n    return a;\n}\n"],"names":["int2char"],"mappings":";;AACA,IAAI,SAAS;AACb,IAAI,SAAS;AACN,SAAS,QAAQ,GAAG;AACvB,MAAI;AACJ,MAAI;AACJ,MAAI,MAAM;AACV,OAAK,IAAI,GAAG,IAAI,KAAK,EAAE,QAAQ,KAAK,GAAG;AACnC,QAAI,SAAS,EAAE,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE;AACtC,WAAO,OAAO,OAAO,KAAK,CAAC,IAAI,OAAO,OAAO,IAAI,EAAE;AAAA,EACtD;AACD,MAAI,IAAI,KAAK,EAAE,QAAQ;AACnB,QAAI,SAAS,EAAE,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE;AACtC,WAAO,OAAO,OAAO,KAAK,CAAC;AAAA,EAC9B,WACQ,IAAI,KAAK,EAAE,QAAQ;AACxB,QAAI,SAAS,EAAE,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE;AACtC,WAAO,OAAO,OAAO,KAAK,CAAC,IAAI,OAAO,QAAQ,IAAI,MAAM,CAAC;AAAA,EAC5D;AACD,UAAQ,IAAI,SAAS,KAAK,GAAG;AACzB,WAAO;AAAA,EACV;AACD,SAAO;AACX;AAEO,SAAS,SAAS,GAAG;AACxB,MAAI,MAAM;AACV,MAAI;AACJ,MAAI,IAAI;AACR,MAAI,OAAO;AACX,OAAK,IAAI,GAAG,IAAI,EAAE,QAAQ,EAAE,GAAG;AAC3B,QAAI,EAAE,OAAO,CAAC,KAAK,QAAQ;AACvB;AAAA,IACH;AACD,QAAI,IAAI,OAAO,QAAQ,EAAE,OAAO,CAAC,CAAC;AAClC,QAAI,IAAI,GAAG;AACP;AAAA,IACH;AACD,QAAI,KAAK,GAAG;AACR,aAAOA,wCAAQ,SAAC,KAAK,CAAC;AACtB,aAAO,IAAI;AACX,UAAI;AAAA,IACP,WACQ,KAAK,GAAG;AACb,aAAOA,wCAAQ,SAAE,QAAQ,IAAM,KAAK,CAAE;AACtC,aAAO,IAAI;AACX,UAAI;AAAA,IACP,WACQ,KAAK,GAAG;AACb,aAAOA,wCAAAA,SAAS,IAAI;AACpB,aAAOA,wCAAQ,SAAC,KAAK,CAAC;AACtB,aAAO,IAAI;AACX,UAAI;AAAA,IACP,OACI;AACD,aAAOA,wCAAQ,SAAE,QAAQ,IAAM,KAAK,CAAE;AACtC,aAAOA,wCAAQ,SAAC,IAAI,EAAG;AACvB,UAAI;AAAA,IACP;AAAA,EACJ;AACD,MAAI,KAAK,GAAG;AACR,WAAOA,wCAAQ,SAAC,QAAQ,CAAC;AAAA,EAC5B;AACD,SAAO;AACX;;;"}