{"version":3,"file":"asn1.js","sources":["uni_modules/jsencrypt/lib/lib/asn1js/asn1.js"],"sourcesContent":["// ASN.1 JavaScript decoder\n// Copyright (c) 2008-2014 Lapo Luchini <lapo@lapo.it>\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\n/*global oids */\nimport { Int10 } from \"./int10\";\nvar ellipsis = \"\\u2026\";\nvar reTimeS = /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\nvar reTimeL = /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\nfunction stringCut(str, len) {\n    if (str.length > len) {\n        str = str.substring(0, len) + ellipsis;\n    }\n    return str;\n}\nvar Stream = /** @class */ (function () {\n    function Stream(enc, pos) {\n        this.hexDigits = \"0123456789ABCDEF\";\n        if (enc instanceof Stream) {\n            this.enc = enc.enc;\n            this.pos = enc.pos;\n        }\n        else {\n            // enc should be an array or a binary string\n            this.enc = enc;\n            this.pos = pos;\n        }\n    }\n    Stream.prototype.get = function (pos) {\n        if (pos === undefined) {\n            pos = this.pos++;\n        }\n        if (pos >= this.enc.length) {\n            throw new Error(\"Requesting byte offset \".concat(pos, \" on a stream of length \").concat(this.enc.length));\n        }\n        return (\"string\" === typeof this.enc) ? this.enc.charCodeAt(pos) : this.enc[pos];\n    };\n    Stream.prototype.hexByte = function (b) {\n        return this.hexDigits.charAt((b >> 4) & 0xF) + this.hexDigits.charAt(b & 0xF);\n    };\n    Stream.prototype.hexDump = function (start, end, raw) {\n        var s = \"\";\n        for (var i = start; i < end; ++i) {\n            s += this.hexByte(this.get(i));\n            if (raw !== true) {\n                switch (i & 0xF) {\n                    case 0x7:\n                        s += \"  \";\n                        break;\n                    case 0xF:\n                        s += \"\\n\";\n                        break;\n                    default:\n                        s += \" \";\n                }\n            }\n        }\n        return s;\n    };\n    Stream.prototype.isASCII = function (start, end) {\n        for (var i = start; i < end; ++i) {\n            var c = this.get(i);\n            if (c < 32 || c > 176) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Stream.prototype.parseStringISO = function (start, end) {\n        var s = \"\";\n        for (var i = start; i < end; ++i) {\n            s += String.fromCharCode(this.get(i));\n        }\n        return s;\n    };\n    Stream.prototype.parseStringUTF = function (start, end) {\n        var s = \"\";\n        for (var i = start; i < end;) {\n            var c = this.get(i++);\n            if (c < 128) {\n                s += String.fromCharCode(c);\n            }\n            else if ((c > 191) && (c < 224)) {\n                s += String.fromCharCode(((c & 0x1F) << 6) | (this.get(i++) & 0x3F));\n            }\n            else {\n                s += String.fromCharCode(((c & 0x0F) << 12) | ((this.get(i++) & 0x3F) << 6) | (this.get(i++) & 0x3F));\n            }\n        }\n        return s;\n    };\n    Stream.prototype.parseStringBMP = function (start, end) {\n        var str = \"\";\n        var hi;\n        var lo;\n        for (var i = start; i < end;) {\n            hi = this.get(i++);\n            lo = this.get(i++);\n            str += String.fromCharCode((hi << 8) | lo);\n        }\n        return str;\n    };\n    Stream.prototype.parseTime = function (start, end, shortYear) {\n        var s = this.parseStringISO(start, end);\n        var m = (shortYear ? reTimeS : reTimeL).exec(s);\n        if (!m) {\n            return \"Unrecognized time: \" + s;\n        }\n        if (shortYear) {\n            // to avoid querying the timer, use the fixed range [1970, 2069]\n            // it will conform with ITU X.400 [-10, +40] sliding window until 2030\n            m[1] = +m[1];\n            m[1] += (+m[1] < 70) ? 2000 : 1900;\n        }\n        s = m[1] + \"-\" + m[2] + \"-\" + m[3] + \" \" + m[4];\n        if (m[5]) {\n            s += \":\" + m[5];\n            if (m[6]) {\n                s += \":\" + m[6];\n                if (m[7]) {\n                    s += \".\" + m[7];\n                }\n            }\n        }\n        if (m[8]) {\n            s += \" UTC\";\n            if (m[8] != \"Z\") {\n                s += m[8];\n                if (m[9]) {\n                    s += \":\" + m[9];\n                }\n            }\n        }\n        return s;\n    };\n    Stream.prototype.parseInteger = function (start, end) {\n        var v = this.get(start);\n        var neg = (v > 127);\n        var pad = neg ? 255 : 0;\n        var len;\n        var s = \"\";\n        // skip unuseful bits (not allowed in DER)\n        while (v == pad && ++start < end) {\n            v = this.get(start);\n        }\n        len = end - start;\n        if (len === 0) {\n            return neg ? -1 : 0;\n        }\n        // show bit length of huge integers\n        if (len > 4) {\n            s = v;\n            len <<= 3;\n            while (((+s ^ pad) & 0x80) == 0) {\n                s = +s << 1;\n                --len;\n            }\n            s = \"(\" + len + \" bit)\\n\";\n        }\n        // decode the integer\n        if (neg) {\n            v = v - 256;\n        }\n        var n = new Int10(v);\n        for (var i = start + 1; i < end; ++i) {\n            n.mulAdd(256, this.get(i));\n        }\n        return s + n.toString();\n    };\n    Stream.prototype.parseBitString = function (start, end, maxLength) {\n        var unusedBit = this.get(start);\n        var lenBit = ((end - start - 1) << 3) - unusedBit;\n        var intro = \"(\" + lenBit + \" bit)\\n\";\n        var s = \"\";\n        for (var i = start + 1; i < end; ++i) {\n            var b = this.get(i);\n            var skip = (i == end - 1) ? unusedBit : 0;\n            for (var j = 7; j >= skip; --j) {\n                s += (b >> j) & 1 ? \"1\" : \"0\";\n            }\n            if (s.length > maxLength) {\n                return intro + stringCut(s, maxLength);\n            }\n        }\n        return intro + s;\n    };\n    Stream.prototype.parseOctetString = function (start, end, maxLength) {\n        if (this.isASCII(start, end)) {\n            return stringCut(this.parseStringISO(start, end), maxLength);\n        }\n        var len = end - start;\n        var s = \"(\" + len + \" byte)\\n\";\n        maxLength /= 2; // we work in bytes\n        if (len > maxLength) {\n            end = start + maxLength;\n        }\n        for (var i = start; i < end; ++i) {\n            s += this.hexByte(this.get(i));\n        }\n        if (len > maxLength) {\n            s += ellipsis;\n        }\n        return s;\n    };\n    Stream.prototype.parseOID = function (start, end, maxLength) {\n        var s = \"\";\n        var n = new Int10();\n        var bits = 0;\n        for (var i = start; i < end; ++i) {\n            var v = this.get(i);\n            n.mulAdd(128, v & 0x7F);\n            bits += 7;\n            if (!(v & 0x80)) { // finished\n                if (s === \"\") {\n                    n = n.simplify();\n                    if (n instanceof Int10) {\n                        n.sub(80);\n                        s = \"2.\" + n.toString();\n                    }\n                    else {\n                        var m = n < 80 ? n < 40 ? 0 : 1 : 2;\n                        s = m + \".\" + (n - m * 40);\n                    }\n                }\n                else {\n                    s += \".\" + n.toString();\n                }\n                if (s.length > maxLength) {\n                    return stringCut(s, maxLength);\n                }\n                n = new Int10();\n                bits = 0;\n            }\n        }\n        if (bits > 0) {\n            s += \".incomplete\";\n        }\n        return s;\n    };\n    return Stream;\n}());\nexport { Stream };\nvar ASN1 = /** @class */ (function () {\n    function ASN1(stream, header, length, tag, sub) {\n        if (!(tag instanceof ASN1Tag)) {\n            throw new Error(\"Invalid tag value.\");\n        }\n        this.stream = stream;\n        this.header = header;\n        this.length = length;\n        this.tag = tag;\n        this.sub = sub;\n    }\n    ASN1.prototype.typeName = function () {\n        switch (this.tag.tagClass) {\n            case 0: // universal\n                switch (this.tag.tagNumber) {\n                    case 0x00:\n                        return \"EOC\";\n                    case 0x01:\n                        return \"BOOLEAN\";\n                    case 0x02:\n                        return \"INTEGER\";\n                    case 0x03:\n                        return \"BIT_STRING\";\n                    case 0x04:\n                        return \"OCTET_STRING\";\n                    case 0x05:\n                        return \"NULL\";\n                    case 0x06:\n                        return \"OBJECT_IDENTIFIER\";\n                    case 0x07:\n                        return \"ObjectDescriptor\";\n                    case 0x08:\n                        return \"EXTERNAL\";\n                    case 0x09:\n                        return \"REAL\";\n                    case 0x0A:\n                        return \"ENUMERATED\";\n                    case 0x0B:\n                        return \"EMBEDDED_PDV\";\n                    case 0x0C:\n                        return \"UTF8String\";\n                    case 0x10:\n                        return \"SEQUENCE\";\n                    case 0x11:\n                        return \"SET\";\n                    case 0x12:\n                        return \"NumericString\";\n                    case 0x13:\n                        return \"PrintableString\"; // ASCII subset\n                    case 0x14:\n                        return \"TeletexString\"; // aka T61String\n                    case 0x15:\n                        return \"VideotexString\";\n                    case 0x16:\n                        return \"IA5String\"; // ASCII\n                    case 0x17:\n                        return \"UTCTime\";\n                    case 0x18:\n                        return \"GeneralizedTime\";\n                    case 0x19:\n                        return \"GraphicString\";\n                    case 0x1A:\n                        return \"VisibleString\"; // ASCII subset\n                    case 0x1B:\n                        return \"GeneralString\";\n                    case 0x1C:\n                        return \"UniversalString\";\n                    case 0x1E:\n                        return \"BMPString\";\n                }\n                return \"Universal_\" + this.tag.tagNumber.toString();\n            case 1:\n                return \"Application_\" + this.tag.tagNumber.toString();\n            case 2:\n                return \"[\" + this.tag.tagNumber.toString() + \"]\"; // Context\n            case 3:\n                return \"Private_\" + this.tag.tagNumber.toString();\n        }\n    };\n    ASN1.prototype.content = function (maxLength) {\n        if (this.tag === undefined) {\n            return null;\n        }\n        if (maxLength === undefined) {\n            maxLength = Infinity;\n        }\n        var content = this.posContent();\n        var len = Math.abs(this.length);\n        if (!this.tag.isUniversal()) {\n            if (this.sub !== null) {\n                return \"(\" + this.sub.length + \" elem)\";\n            }\n            return this.stream.parseOctetString(content, content + len, maxLength);\n        }\n        switch (this.tag.tagNumber) {\n            case 0x01: // BOOLEAN\n                return (this.stream.get(content) === 0) ? \"false\" : \"true\";\n            case 0x02: // INTEGER\n                return this.stream.parseInteger(content, content + len);\n            case 0x03: // BIT_STRING\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\n                    this.stream.parseBitString(content, content + len, maxLength);\n            case 0x04: // OCTET_STRING\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\n                    this.stream.parseOctetString(content, content + len, maxLength);\n            // case 0x05: // NULL\n            case 0x06: // OBJECT_IDENTIFIER\n                return this.stream.parseOID(content, content + len, maxLength);\n            // case 0x07: // ObjectDescriptor\n            // case 0x08: // EXTERNAL\n            // case 0x09: // REAL\n            // case 0x0A: // ENUMERATED\n            // case 0x0B: // EMBEDDED_PDV\n            case 0x10: // SEQUENCE\n            case 0x11: // SET\n                if (this.sub !== null) {\n                    return \"(\" + this.sub.length + \" elem)\";\n                }\n                else {\n                    return \"(no elem)\";\n                }\n            case 0x0C: // UTF8String\n                return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);\n            case 0x12: // NumericString\n            case 0x13: // PrintableString\n            case 0x14: // TeletexString\n            case 0x15: // VideotexString\n            case 0x16: // IA5String\n            // case 0x19: // GraphicString\n            case 0x1A: // VisibleString\n                // case 0x1B: // GeneralString\n                // case 0x1C: // UniversalString\n                return stringCut(this.stream.parseStringISO(content, content + len), maxLength);\n            case 0x1E: // BMPString\n                return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);\n            case 0x17: // UTCTime\n            case 0x18: // GeneralizedTime\n                return this.stream.parseTime(content, content + len, (this.tag.tagNumber == 0x17));\n        }\n        return null;\n    };\n    ASN1.prototype.toString = function () {\n        return this.typeName() + \"@\" + this.stream.pos + \"[header:\" + this.header + \",length:\" + this.length + \",sub:\" + ((this.sub === null) ? \"null\" : this.sub.length) + \"]\";\n    };\n    ASN1.prototype.toPrettyString = function (indent) {\n        if (indent === undefined) {\n            indent = \"\";\n        }\n        var s = indent + this.typeName() + \" @\" + this.stream.pos;\n        if (this.length >= 0) {\n            s += \"+\";\n        }\n        s += this.length;\n        if (this.tag.tagConstructed) {\n            s += \" (constructed)\";\n        }\n        else if ((this.tag.isUniversal() && ((this.tag.tagNumber == 0x03) || (this.tag.tagNumber == 0x04))) && (this.sub !== null)) {\n            s += \" (encapsulates)\";\n        }\n        s += \"\\n\";\n        if (this.sub !== null) {\n            indent += \"  \";\n            for (var i = 0, max = this.sub.length; i < max; ++i) {\n                s += this.sub[i].toPrettyString(indent);\n            }\n        }\n        return s;\n    };\n    ASN1.prototype.posStart = function () {\n        return this.stream.pos;\n    };\n    ASN1.prototype.posContent = function () {\n        return this.stream.pos + this.header;\n    };\n    ASN1.prototype.posEnd = function () {\n        return this.stream.pos + this.header + Math.abs(this.length);\n    };\n    ASN1.prototype.toHexString = function () {\n        return this.stream.hexDump(this.posStart(), this.posEnd(), true);\n    };\n    ASN1.decodeLength = function (stream) {\n        var buf = stream.get();\n        var len = buf & 0x7F;\n        if (len == buf) {\n            return len;\n        }\n        // no reason to use Int10, as it would be a huge buffer anyways\n        if (len > 6) {\n            throw new Error(\"Length over 48 bits not supported at position \" + (stream.pos - 1));\n        }\n        if (len === 0) {\n            return null;\n        } // undefined\n        buf = 0;\n        for (var i = 0; i < len; ++i) {\n            buf = (buf * 256) + stream.get();\n        }\n        return buf;\n    };\n    /**\n     * Retrieve the hexadecimal value (as a string) of the current ASN.1 element\n     * @returns {string}\n     * @public\n     */\n    ASN1.prototype.getHexStringValue = function () {\n        var hexString = this.toHexString();\n        var offset = this.header * 2;\n        var length = this.length * 2;\n        return hexString.substr(offset, length);\n    };\n    ASN1.decode = function (str) {\n        var stream;\n        if (!(str instanceof Stream)) {\n            stream = new Stream(str, 0);\n        }\n        else {\n            stream = str;\n        }\n        var streamStart = new Stream(stream);\n        var tag = new ASN1Tag(stream);\n        var len = ASN1.decodeLength(stream);\n        var start = stream.pos;\n        var header = start - streamStart.pos;\n        var sub = null;\n        var getSub = function () {\n            var ret = [];\n            if (len !== null) {\n                // definite length\n                var end = start + len;\n                while (stream.pos < end) {\n                    ret[ret.length] = ASN1.decode(stream);\n                }\n                if (stream.pos != end) {\n                    throw new Error(\"Content size is not correct for container starting at offset \" + start);\n                }\n            }\n            else {\n                // undefined length\n                try {\n                    for (;;) {\n                        var s = ASN1.decode(stream);\n                        if (s.tag.isEOC()) {\n                            break;\n                        }\n                        ret[ret.length] = s;\n                    }\n                    len = start - stream.pos; // undefined lengths are represented as negative values\n                }\n                catch (e) {\n                    throw new Error(\"Exception while decoding undefined length content: \" + e);\n                }\n            }\n            return ret;\n        };\n        if (tag.tagConstructed) {\n            // must have valid content\n            sub = getSub();\n        }\n        else if (tag.isUniversal() && ((tag.tagNumber == 0x03) || (tag.tagNumber == 0x04))) {\n            // sometimes BitString and OctetString are used to encapsulate ASN.1\n            try {\n                if (tag.tagNumber == 0x03) {\n                    if (stream.get() != 0) {\n                        throw new Error(\"BIT STRINGs with unused bits cannot encapsulate.\");\n                    }\n                }\n                sub = getSub();\n                for (var i = 0; i < sub.length; ++i) {\n                    if (sub[i].tag.isEOC()) {\n                        throw new Error(\"EOC is not supposed to be actual content.\");\n                    }\n                }\n            }\n            catch (e) {\n                // but silently ignore when they don't\n                sub = null;\n            }\n        }\n        if (sub === null) {\n            if (len === null) {\n                throw new Error(\"We can't skip over an invalid tag with undefined length at offset \" + start);\n            }\n            stream.pos = start + Math.abs(len);\n        }\n        return new ASN1(streamStart, header, len, tag, sub);\n    };\n    return ASN1;\n}());\nexport { ASN1 };\nvar ASN1Tag = /** @class */ (function () {\n    function ASN1Tag(stream) {\n        var buf = stream.get();\n        this.tagClass = buf >> 6;\n        this.tagConstructed = ((buf & 0x20) !== 0);\n        this.tagNumber = buf & 0x1F;\n        if (this.tagNumber == 0x1F) { // long tag\n            var n = new Int10();\n            do {\n                buf = stream.get();\n                n.mulAdd(128, buf & 0x7F);\n            } while (buf & 0x80);\n            this.tagNumber = n.simplify();\n        }\n    }\n    ASN1Tag.prototype.isUniversal = function () {\n        return this.tagClass === 0x00;\n    };\n    ASN1Tag.prototype.isEOC = function () {\n        return this.tagClass === 0x00 && this.tagNumber === 0x00;\n    };\n    return ASN1Tag;\n}());\nexport { ASN1Tag };\n"],"names":["Stream","Int10","ASN1","ASN1Tag"],"mappings":"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"}